void swap(int* nums, int i, int j) {
    int temp = nums[i];
    nums[i] = nums[j];
    nums[j] = temp;
}

int firstMissingPositive(int* nums, int numsSize) {
    // Phase 1: Cyclic Sort (Place number 'x' at index 'x-1')
    int i = 0;
    while (i < numsSize) {
        int correct_index = nums[i] - 1;
        if (nums[i] > 0 && nums[i] <= numsSize && nums[i] != nums[correct_index]) {
            swap(nums, i, correct_index);
        } else {
            i++;
        }
    }
    for (i = 0; i < numsSize; i++) {
        if (nums[i] != i + 1) {
            return i + 1;
        }
    }
    return numsSize + 1;
}
